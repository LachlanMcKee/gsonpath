package generator.standard.using_constructor.valid;

import com.google.gson.annotations.SerializedName;
import gsonpath.annotation.AutoGsonAdapter;
import kotlin.jvm.internal.Intrinsics;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * TODO: Once I figure out how to run the annotation processor tests on actual data classes, this file should be
 * changed to be an actual data class, rather than the Java code generated by the data class.
 *
 * If Jetbrains changes the way in which data clases are generated, this test will incorrectly still pass.
 */
@AutoGsonAdapter
public final class ValidConstructorTest {
   @SerializedName("parent.child.")
   @NotNull
   private final String value1;
   private final boolean isBooleanTest1;
   @Nullable
   private final Boolean isBooleanTest2;

   @NotNull
   public final String getValue1() {
      return this.value1;
   }

   public final boolean isBooleanTest1() {
      return this.isBooleanTest1;
   }

   @Nullable
   public final Boolean isBooleanTest2() {
      return this.isBooleanTest2;
   }

   public ValidConstructorTest(@NotNull String value1, boolean isBooleanTest1, @Nullable Boolean isBooleanTest2) {
      Intrinsics.checkParameterIsNotNull(value1, "value1");
      this.value1 = value1;
      this.isBooleanTest1 = isBooleanTest1;
      this.isBooleanTest2 = isBooleanTest2;
   }
}
