apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.2-SNAPSHOT" // the snapshot ignores generated kotlin code
}

targetCompatibility = JavaVersion.VERSION_1_8
sourceCompatibility = JavaVersion.VERSION_1_8

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile project(":gsonpath-compiler")
    testCompile "junit:junit:$junit_version"
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile "com.google.truth:truth:0.34"
    testCompile "com.google.testing.compile:compile-testing:0.11"
    testCompile files(org.gradle.internal.jvm.Jvm.current().getToolsJar())
}


repositories {
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }

    // Ignore extension code
    def excludes = ['gsonpath/compiler/ExtensionFieldMetadata.class']

    classDirectories = fileTree(dir: "../gsonpath-compiler/build/classes/main") +
            fileTree(dir: "../gsonpath-compiler/build/kotlin-classes/main") +
            fileTree(dir: "../gsonpath-compiler-base/build/classes/main", excludes: excludes) +
            fileTree(dir: "../gsonpath-compiler-base/build/kotlin-classes/main", excludes: excludes)

    sourceDirectories = files('../gsonpath-compiler/src/main/java',
            '../gsonpath-compiler-base/src/main/java')
}

check.dependsOn jacocoTestReport
test { finalizedBy jacocoTestReport }
