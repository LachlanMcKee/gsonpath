buildscript {
    ext.kotlin_version = '1.2.71'
    ext.javapoet_version = '1.11.1'
    ext.gson_version = '2.8.1'
    ext.junit_version = '4.12'

    repositories {
        jcenter()
    }
}

plugins {
    id "org.sonarqube" version "2.5"
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.2"
}

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "Gsonpath"
        property "sonar.projectKey", "gsonpath"
    }
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    // Ignore extension code
    def excludes = ['gsonpath/compiler/ExtensionFieldMetadata.class']

    classDirectories = fileTree(dir: "gsonpath-compiler/build/classes/java/main") +
            fileTree(dir: "gsonpath-compiler/build/classes/kotlin/main") +
            fileTree(dir: "gsonpath-compiler-base/build/classes/java/main", excludes: excludes) +
            fileTree(dir: "gsonpath-compiler-base/build/classes/kotlin/main", excludes: excludes)

    sourceDirectories = files('gsonpath-compiler/src/main/java',
            'gsonpath-compiler-base/src/main/java')

    reports {
        xml.setEnabled(true)
        xml.destination new File("${buildDir}/reports/jacoco/report.xml")
        html.setEnabled(false)
        csv.setEnabled(false)
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}